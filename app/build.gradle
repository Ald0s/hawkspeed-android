plugins {
    id 'com.android.application'
    id 'kotlin-android'

    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'kotlinx-serialization'
    id("kotlin-parcelize")

    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'
}
android {
    namespace 'com.vljx.hawkspeed'
    compileSdk 33

    defaultConfig {
        applicationId "com.vljx.hawkspeed"
        minSdk 28
        targetSdk 33
        versionCode 20
        versionName "1.10.17"

        testInstrumentationRunner = "com.vljx.hawkspeed.HawkSpeedJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }
    buildFeatures {
        buildConfig true
        compose true
    }

    testOptions {
        animationsDisabled = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            manifestPlaceholders = ["usesCleartextTraffic": "false"]
        }

        debug {
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            manifestPlaceholders = ["usesCleartextTraffic": "true"]
        }
    }
    flavorDimensions "data_access"
    productFlavors {
        mocked {
            dimension "data_access"
            buildConfigField "boolean", "MOCKED_DATA_ACCESS", "true"
            buildConfigField "String", "SERVICE_URL", "\"http://localhost:8080\""
            buildConfigField "boolean", "USE_MOCK_LOCATION", "true"
        }
        realLocalServer {
            dimension "data_access"
            buildConfigField "boolean", "MOCKED_DATA_ACCESS", "false"
            buildConfigField "String", "SERVICE_URL", "\"http://192.168.0.44:5000/\""
            buildConfigField "boolean", "USE_MOCK_LOCATION", "false"
        }
        real {
            dimension "data_access"
            buildConfigField "boolean", "MOCKED_DATA_ACCESS", "false"
            buildConfigField "String", "SERVICE_URL", "\"http://TODO.com/\""
            buildConfigField "boolean", "USE_MOCK_LOCATION", "false"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.4.0'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {
    implementation project(path: ":common")
    implementation project(path: ":domain")
    implementation project(path: ":data")

    // Google Play Services.
    implementation "com.google.maps.android:maps-compose:$mapsComposeVersion"
    implementation "com.google.android.gms:play-services-maps:$playServicesMapsVersion"
    implementation "com.google.android.gms:play-services-location:$playServicesLocationVersion"
    implementation "com.google.maps.android:android-maps-utils:$mapsUtilsVersion"

    implementation "androidx.core:core-ktx:$coreKtxVersion"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycleRuntimeKtxVersion"
    implementation "androidx.activity:activity-compose:$activityComposeVersion"

    // Timber.
    implementation "com.jakewharton.timber:timber:$timberVersion"

    // Hilt.
    implementation "com.google.dagger:hilt-android:$daggerHiltAndroidVersion"
    kapt "com.google.dagger:hilt-compiler:$daggerHiltCompilerVersion"
    androidTestImplementation  "com.google.dagger:hilt-android-testing:$daggerHiltAndroidVersion"
    kaptAndroidTest "com.google.dagger:hilt-compiler:$daggerHiltCompilerVersion"
    testImplementation "com.google.dagger:hilt-android-testing:$daggerHiltAndroidVersion"
    kaptTest "com.google.dagger:hilt-compiler:$daggerHiltCompilerVersion"

    // Paging.
    implementation("androidx.paging:paging-runtime-ktx:$pagingKtxVersion")

    // Navigation.
    implementation "androidx.navigation:navigation-fragment-ktx:$navigationFragmentKtxVersion"
    implementation "androidx.navigation:navigation-compose:$navigationFragmentKtxVersion"
    implementation "androidx.hilt:hilt-navigation-compose:$hiltNavigationComposeVersion"

    // Room.
    annotationProcessor "androidx.room:room-compiler:$roomVersion"
    kapt("androidx.room:room-compiler:$roomVersion")
    implementation("androidx.room:room-runtime:$roomVersion")
    implementation("androidx.room:room-ktx:$roomVersion")
    implementation("androidx.room:room-paging:$roomVersion")

    // Coil.
    implementation("io.coil-kt:coil-compose:$coilVersion")

    // Gson.
    implementation "com.google.code.gson:gson:$gsonVersion"

    // Jetpack Compose.
    implementation "androidx.lifecycle:lifecycle-runtime-compose:$lifecycleComposeRuntimeVersion"
    implementation platform("androidx.compose:compose-bom:$composeBomVersion")
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-graphics'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    implementation "androidx.compose.foundation:foundation:$composeFoundationVersion"
    implementation "androidx.paging:paging-compose:$pagingComposeVersion"
    implementation "androidx.compose.material3:material3:$material3Version"
    androidTestImplementation platform("androidx.compose:compose-bom:$composeBomVersion")
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-tooling'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'

    // Kotlin coroutines.
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$kotlinXCoroutinesVersion"

    // JUnit & Espresso.
    testImplementation "junit:junit:$junitTestVersion"
    androidTestImplementation "androidx.test.ext:junit:$testExtJunitVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoCoreVersion"
    implementation "androidx.test.espresso:espresso-idling-resource:$espressoIdlingResourceVersion"

    // Mockito.
    testImplementation "org.mockito.kotlin:mockito-kotlin:$mockitoVersion"
}